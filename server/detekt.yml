style:
  # The maximum line length is relaxed to 132 characters which is the width of a
  # DEC VT-340 terminal.
  MaxLineLength:
    maxLineLength: 132
    ignoreAnnotated: [ "org.junit.jupiter.api.Test" ]

  # Wildcard imports make the code more readable because they shrink the size of
  # the import section. This is especially beneficial to extension methods as to
  # not import every extension method separately.
  WildcardImport:
    active: false
  
  # This check can be suppressed using an annotation. This proved useful in some
  # contexts, where giving the constants a name is not a helpful documentation.
  MagicNumber:
    ignoreAnnotated: [ "com.pse_app.server.data.Magic" ]


naming:
  # Our domain name and therefore our packages contain an underscore. This isn't
  # allowed in the default settings for some reason.
  PackageNaming:
    packagePattern: "[a-z_]+(\\.[a-z_][A-Za-z0-9_]*)*"


exceptions: 
  # These two checks are disabled on a per-method basis as they produce valuable
  # results in most cases but in some scenarios it is a necessity to catch every
  # exception. Per-method reasoning can be found below:
  # - main
  #   The entrypoint function catches every exception to give it proper logging.
  #   Any exception that makes it here is a critical failure that will result in
  #   the immediate termination of the server.
  # - tryTo
  #   This is a `Result` method that is supposed to catch only a single concrete
  #   type of exception. However, Kotlin does not allow catch clauses on reified
  #   type variables. Therefore, every exception is caught. If the exception has
  #   the wrong type it is rethrown which is opaque to the surrounding code.
  # - startIdTokenAuth
  #   This method starts a thread that periodically reloads the OpenID discovery
  #   data. If the reload fails for, the thread must be prevented from dying, so
  #   further reload attempts are attempted. This requires a catch-all exception
  #   handler.
  # - logOnError
  #   This method catches exceptions during route handling so they can be logged
  #   properly.
  TooGenericExceptionCaught:
    ignoreFunction:
      - "main"
      - "tryTo"
      - "startIdTokenAuth"
      - "com.pse_app.server.handler.RequestRouter.logOnError"
  InstanceOfCheckForException: 
    ignoreFunction:
      - "tryTo"

  # This check virtually always produces false-positive results due to the error
  # handling strategy used on the server: exceptions are converted to Results as
  # early as possible which swallows the exception but creates an errored result
  # that propagates up until it is properly handled.
  SwallowedException:
    active: false


performance: 
  # The spread operator is necessary to call java vararg methods. Therefor it is
  # not possible to abstain from using it.
  SpreadOperator:
    active: false


complexity:
  # These thresholds have been lowered especially because the interfaces between
  # the server components exceed the default settings of this check. To keep the
  # structure and interfaces from the design phase it was necessary to relax 
  TooManyFunctions: 
    thresholdInFiles: 30
    thresholdInClasses: 30
    thresholdInInterfaces: 30
    thresholdInObjects: 30
    thresholdInEnums: 30

  # The new two checks are relaxed primarily due to test classes containing lots
  # of test cases that belong together semantically and use common functionality
  # for mocking. Because test cases are independent of each other and don't call
  # reference other test cases this was deemed reasonable.
  LongMethod:
    threshold: 250
  LargeClass:
    threshold: 1000

  # The entrypoint function should not be treated like a method but like a class
  # especially as it has its own source file with just one method. And while the
  # main method is complex in relation to other methods, its complexity is about
  # average for a class containing program logic. The same reasoning applies for
  # the bootstrap function.
  CyclomaticComplexMethod:
    ignoreFunction: [ "main", "bootstrap" ]

  # Named default parameters don't necessarily contribute to the complexity of a
  # method. Often times it is useful to have many named default parameters where
  # only a few get set when the function is used.
  LongParameterList:
    ignoreDefaultParameters: true
